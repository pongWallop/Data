 # classification problem
  data("PimaIndiansDiabetes")
glimpse(PimaIndiansDiabetes)

dfpima <- PimaIndiansDiabetes

subset_dfPima <-  dfpima %>%
  select(glucose, insulin, age, diabetes)

# 1. split data 

set.seed(42)
n <- nrow(dfpima)
id <- sample(1:n, size = 0.8*n)
train_dataPimna <- subset_dfPima[id, ]
test_dataPima <- subset_dfPima[-id, ]

##2 train data  

## Accuracy

set.seed(42)
ctrl <-  trainControl( method = "cv",
                       number = 5,
                       verboseIter = TRUE)

(knn_model <- train(diabetes  ~ .,
                    data = train_dataPimna,
                    method = "knn",
                    trControl = ctrl))


# Advance *************************** classification


set.seed(42)

ctrl <-  trainControl( method = "cv",
                       number = 5,
                       verboseIter = TRUE,
                       summaryFunction = twoClassSummary,
                       classProbs = T)

(knn_model <- train(diabetes  ~ .,
                   data = train_dataPimna,
                   method = "knn",
                   metric = "Sens", #recall สามารถเปลี่ยนได้ 
                   trControl = ctrl))


# score 

p <-  predict(knn_model, newdata = test_dataPima)

# evaluate 2 วิธี +- 5% ต้องเลือก 'Positive' Class : pos ที่เราสนใจ 

# Sensitivity คือ recall 
# 


#คิดมือ

table(test_dataPima$diabetes, p, dnn = c("actual",
                                         "preiction"))
(76+32)/ nrow(test_dataPima)


## function 
confusionMatrix(p,test_dataPima$diabetes, positive = "pos")

